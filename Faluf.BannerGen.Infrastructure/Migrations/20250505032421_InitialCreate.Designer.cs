// <auto-generated />
using System;
using Faluf.BannerGen.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Faluf.BannerGen.Infrastructure.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20250505032421_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.Banner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AIModel")
                        .HasColumnType("int");

                    b.Property<int>("BannerFormat")
                        .HasColumnType("int");

                    b.Property<Guid>("BannerRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneratedCSSUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedHtmlUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedJSUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCostUSD")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BannerRequestId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.BannerFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BannerRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BannerRequestId");

                    b.ToTable("BannerFiles");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.BannerRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AIModel")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("BannerFormats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CTAButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("HexColors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptimizedInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BannerRequests");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.OverlayText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BannerRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FontFamilyUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BannerRequestId");

                    b.ToTable("OverlayTexts");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.Banner", b =>
                {
                    b.HasOne("Faluf.BannerGen.Core.Domain.BannerRequest", "BannerRequest")
                        .WithMany("Banners")
                        .HasForeignKey("BannerRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BannerRequest");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.BannerFile", b =>
                {
                    b.HasOne("Faluf.BannerGen.Core.Domain.BannerRequest", "BannerRequest")
                        .WithMany("MediaFiles")
                        .HasForeignKey("BannerRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BannerRequest");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.OverlayText", b =>
                {
                    b.HasOne("Faluf.BannerGen.Core.Domain.BannerRequest", "BannerRequest")
                        .WithMany("OverlayTexts")
                        .HasForeignKey("BannerRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BannerRequest");
                });

            modelBuilder.Entity("Faluf.BannerGen.Core.Domain.BannerRequest", b =>
                {
                    b.Navigation("Banners");

                    b.Navigation("MediaFiles");

                    b.Navigation("OverlayTexts");
                });
#pragma warning restore 612, 618
        }
    }
}
